/* 
 * (C) 2001 Clemson University and The University of Chicago 
 *
 * See COPYING in top-level directory.
 */
#include <stdio.h>
#include <string.h>
#include <assert.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <fcntl.h>

#include "server-config.h"
#include "pvfs2-server.h"

%%

machine pvfs2_get_config_sm
{
	state prelude
	{
		jump pvfs2_prelude_sm;
		success => init;
		default => final_response;
	}

	state init
	{
		run getconfig_init;
		default => final_response;
	}

	state final_response
	{
		jump pvfs2_final_response_sm;
		default => cleanup;
	}

	state cleanup
	{
		run getconfig_cleanup;
		default => terminate;
	}
}

%%

/*
 * Function: getconfig_init
 *
 * Params:   server_op *b, 
 *           job_status_s* js_p
 *
 * Pre:      fs_id mapping exists on server
 *
 * Post:     None
 *
 * Returns:  void
 *
 * Synopsis: Get information from config structure
 *           then move to next state.
 *           
 */

static PINT_sm_action getconfig_init(
        struct PINT_smcb *smcb, job_status_s *js_p)
{
    struct PINT_server_op *s_op = PINT_sm_frame(smcb, PINT_FRAME_CURRENT);
    struct server_configuration_s *user_opts = get_server_config_struct();
    assert(user_opts);

    /* TODO: handle this properly later */
    assert(user_opts->fs_config_buflen <= PVFS_REQ_LIMIT_CONFIG_FILE_BYTES);

    s_op->resp.u.getconfig.fs_config_buf_size =
        (uint32_t)user_opts->fs_config_buflen;
    s_op->resp.u.getconfig.fs_config_buf =
        (char*)user_opts->fs_config_buf;

    js_p->error_code = 0;
    return SM_ACTION_COMPLETE;
}

/*
 * Function: getconfig_cleanup
 *
 * Params:   server_op *b, 
 *           job_status_s* js_p
 *
 * Pre:      None
 *
 * Post:     None
 *
 * Returns:  void
 *
 * Synopsis: cleans up string memory
 *           response structure
 */

static PINT_sm_action getconfig_cleanup(
        struct PINT_smcb *smcb, job_status_s *js_p)
{
    return(server_state_machine_complete(smcb));
}

struct PINT_server_req_params pvfs2_get_config_params =
{
    .string_name = "getconfig",
    .perm = PINT_SERVER_CHECK_NONE,
    .state_machine = &pvfs2_get_config_sm
};

/*
 * Local variables:
 *  mode: c
 *  c-indent-level: 4
 *  c-basic-offset: 4
 * End:
 *
 * vim: ft=c ts=8 sts=4 sw=4 expandtab
 */

